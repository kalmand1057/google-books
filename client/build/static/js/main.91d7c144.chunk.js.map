{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/Searchbar.js","utils/API.js","components/ResultListItem.js","components/ResultList.js","pages/Search.js","components/SavedListItem.js","components/SavedList.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","Nav","className","href","styles","img","backgroundImage","backgroundRepeat","backgroundPosition","header","color","fontSize","p","Hero","Jumbotron","fluid","style","Container","Input","props","type","SubmitBtn","Button","variant","query","axios","get","id","delete","bookData","post","card","margin","height","ResultListItem","state","mounted","bgColor","text","componentDidMount","setState","console","log","getStyle","onClickFunc","saveBook","Card","Body","Row","Col","alt","this","title","src","image","authors","description","Link","link","onClick","Component","ResultList","bookState","map","book","key","volumeInfo","infoLink","imageLinks","thumbnail","Search","books","search","searchBooks","API","then","res","data","items","catch","err","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","currentBook","onChange","placeholder","length","deleteBook","bind","SavedListItem","_id","Saved","savedBooks","getBooks","SavedList","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.91d7c144.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from 'react-bootstrap';\r\n\r\n\r\n// const styles = {\r\n    \r\n// }\r\n\r\nfunction Navbar() {\r\n  return (\r\n  <Nav>\r\n    <div>\r\n        <a className=\"navbar-brand\" href=\"/\">Search</a>\r\n        <a className=\"navbar-brand\" href=\"/Saved\">Saved</a>\r\n    </div>\r\n  </Nav>\r\n  );\r\n}\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n    img: {\r\n        backgroundImage: \"url(/books.jpeg)\",\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    header: {\r\n        color: \"white\",\r\n        fontSize: 50\r\n    },\r\n    p: {\r\n        color: \"white\",\r\n        fontSize: 25  \r\n    }\r\n}\r\n\r\nfunction Hero() {\r\n    return (\r\n    <div>\r\n        <Jumbotron fluid  style={styles.img}>\r\n            <Container>\r\n                <h1 style={styles.header}>Google Books</h1>\r\n                <p style={styles.p}>Find a book from this collection here</p>\r\n            </Container>\r\n        </Jumbotron>  \r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Hero;","import React from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\">\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport function SubmitBtn(props) {\r\nreturn (\r\n  <Button variant=\"dark\" type=\"submit\"{...props}>Search</Button>\r\n)\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  googleBooks: function(query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n  },\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport { Card, Row, Col, Button } from 'react-bootstrap';\r\n// import Card from \"./Card\";\r\n// import { Container, Row, Col } from \"../components/Grid\";\r\n\r\nconst styles = {\r\n    card: {\r\n        margin: 15\r\n    },\r\n    img: {\r\n        height: 200\r\n    }\r\n}\r\n\r\nclass ResultListItem extends Component {\r\n\r\n    state = {\r\n        mounted: false,\r\n        bgColor: \"\",\r\n        color: \"\",\r\n        text: \"Save\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            mounted: true\r\n        })\r\n        console.log(\"MOUNTED\")\r\n    }\r\n\r\n    getStyle = () => {\r\n        if (this.state.text === \"Save\") {\r\n            this.setState({\r\n                bgColor: \"696969\",\r\n                color: \"black\",\r\n                text: \"Saved\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                bgColor: \"\",\r\n                color: \"\",\r\n                text: \"Save\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickFunc = () => {\r\n        this.props.saveBook(this.props);\r\n        this.getStyle();\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n        <Card style={styles.card}>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col>\r\n                        <img alt={this.props.title} src={this.props.image} style={styles.img}/>\r\n                    </Col>\r\n                    <Col>\r\n                        {this.props.authors}\r\n                    </Col>\r\n                    <Col>\r\n                        {this.props.description}\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Link href={this.props.link} >\r\n                            Link Here\r\n                        </Card.Link>\r\n                        <Button onClick={this.onClickFunc}>{this.state.text}</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultListItem;","import React, { Component } from \"react\";\r\nimport ResultListItem from \"./ResultListItem\";\r\n\r\nclass ResultList extends Component {\r\n    render() {\r\n        console.log(\"ResultList!\", this.props.bookState)\r\n        return (\r\n            this.props.bookState.map((book) => (\r\n                <ResultListItem\r\n                key={book.id}\r\n                id={book.id}\r\n                title={book.volumeInfo.title}\r\n                link={book.volumeInfo.infoLink}\r\n                authors={book.volumeInfo.authors}\r\n                image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://previews.123rf.com/images/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-no-image-available-icon-flat-vector.jpg\"}\r\n                description={book.volumeInfo.description}\r\n                saveBook={this.props.saveBook}\r\n                />\r\n            ))\r\n        )\r\n    }\r\n};\r\n\r\nexport default ResultList;","import React, { Component } from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport { Input, SubmitBtn} from \"../components/Searchbar\";\r\nimport API from \"../utils/API\"\r\nimport ResultList from \"../components/ResultList\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    books: [],\r\n    search: \"\"\r\n  }\r\n\r\n  //Google API search\r\n  searchBooks = () => {\r\n   API.googleBooks(this.state.search)\r\n   .then(res => {\r\n     console.log(res.data.items)\r\n     this.setState({\r\n       books: res.data.items,\r\n       search: \"\"\r\n     })\r\n   })\r\n   .catch(err => console.log(err))\r\n  };\r\n\r\n  //Input\r\n  handleInputChange = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  //data submission\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchBooks();\r\n  };\r\n\r\n  //save books\r\n  saveBook = currentBook => {\r\n    console.log(\"got the current book!!\", currentBook)\r\n    API.saveBook({\r\n      id: currentBook.id,\r\n      title: currentBook.title,\r\n      authors: currentBook.authors.authors,\r\n      description: currentBook.authors.description,\r\n      image: currentBook.authors.image,\r\n      link: currentBook.link\r\n    })\r\n    .then(res => console.log(\"posted to database!\", res))\r\n    .catch(err => console.log(\"error posting to database\", err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero />\r\n        <Input \r\n        value={this.state.search}\r\n        onChange={this.handleInputChange}\r\n        name=\"search\"\r\n        placeholder=\"type keyword here\"\r\n        />\r\n        <SubmitBtn\r\n        onClick={this.handleFormSubmit}\r\n        />\r\n\r\n        {this.state.books.length ? (\r\n          <ResultList\r\n          bookState={this.state.books}\r\n          saveBook={this.saveBook}\r\n          >\r\n          </ResultList>\r\n        ) : (\r\n          <div>\r\n            <hr/>\r\n            <p>No results yet</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n  );\r\n  }\r\n  }\r\n\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { Card, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n    card: {\r\n        margin: 15\r\n    },\r\n    img: {\r\n        height: 200\r\n    }\r\n}\r\n\r\nfunction ResultListItem(props) {\r\n    const {title, authors, image, link, description, deleteBook} = props\r\n    return (\r\n        <Card style={styles.card}>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col>\r\n                        <img alt={title} src={image} style={styles.img}/>\r\n                    </Col>\r\n                    <Col>\r\n                        {authors}\r\n                    </Col>\r\n                    <Col>\r\n                        {description}\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Link href={link} >\r\n                            Link Here\r\n                        </Card.Link>\r\n                        <Button onClick={deleteBook.bind(this, props)}>Delete</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ResultListItem;","import React, { Component } from \"react\";\r\nimport SavedListItem from \"../components/SavedListItem\";\r\n\r\nclass ResultList extends Component {\r\n    render() {\r\n        return (\r\n            this.props.bookState.map((book) => (\r\n                <SavedListItem\r\n                key={book._id}\r\n                id={book._id}\r\n                title={book.volumeInfo.title}\r\n                link={book.volumeInfo.infoLink}\r\n                authors={book.volumeInfo.authors}\r\n                image={book.volumeInfo.image ? book.imageLinks.thumbnail : \"https://previews.123rf.com/images/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-no-image-available-icon-flat-vector.jpg\"}\r\n                description={book.volumeInfo.description}\r\n                deleteBook={this.props.deleteBook}\r\n                />\r\n            ))\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultList;","import React, { Component } from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport SavedList from \"../components/SavedList\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    savedBooks: []\r\n  }\r\n\r\n  //didMount\r\n  componentDidMount = () => {\r\n    this.getBooks();\r\n  }\r\n\r\n  //deleting books from saved page\r\n  deleteBook = currentBook => {\r\n    API.deleteBook(currentBook.id)\r\n    .then(res => {\r\n      console.log(\"book deleted!\", res);\r\n      this.getBooks();\r\n    })\r\n    .catch(err => {\r\n      console.log(\"error deleting book\", err);\r\n    });\r\n  }\r\n\r\n  getBooks = () => {\r\n    API.getBooks()\r\n    .then(res => {\r\n      this.setState({\r\n        savedBooks: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(\"error getting books\", err);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero />\r\n        {this.state.savedBooks.length ? (\r\n          <SavedList\r\n          bookState={this.state.savedBooks}\r\n          deleteBook={this.deleteBook}\r\n          >\r\n          </SavedList>\r\n        ) : (\r\n          <div>\r\n            <hr/>\r\n            <p>No results yet</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n  );\r\n  }\r\n  }\r\n\r\n\r\nexport default Saved;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Search}/>\r\n            <Route exact path=\"/saved\" component={Saved}/>\r\n          </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}